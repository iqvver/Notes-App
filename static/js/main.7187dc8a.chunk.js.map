{"version":3,"sources":["store.js","Component/ItemEdit.js","Component/Sidebar/Modal.js","Component/NewNote.js","Component/Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["STORE_KEY","store","_data","activeItemIndex","makeAutoObservable","this","JSON","parse","localStorage","getItem","e","data","setItem","stringify","item","note","newNotes","console","log","find","index","filter","observer","activeItem","getActiveItem","title","text","className","autoFocus","type","placeholder","value","onChange","updateActiveItem","target","useState","isModalVisible","setIsModalVisible","size","onClick","DeleteOutlined","visible","onOk","stopPropagation","removeItem","onCancel","NewNote","handleClick","props","PlusOutlined","Component","Header","Layout","Sider","Content","React","collapsed","setCollapsed","trigger","collapsible","nativeEvent","stopImmediatePropagation","addItem","onSelect","key","theme","mode","defaultSelectedKeys","map","idx","Item","icon","RightOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7187dc8a.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\"\r\n\r\nconst STORE_KEY = 'STORE_KEY';\r\n\r\nclass Store {\r\n    _data = []\r\n    activeItemIndex = 1\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n        try {// если вдруг в стораже лежит кривая строка то мы отловим ошибку\r\n            this._data = JSON.parse(localStorage.getItem(STORE_KEY)) || []\r\n        } catch (e) { }\r\n    }\r\n    get data() { return this._data }\r\n    set data(data) {\r\n        localStorage.setItem(STORE_KEY, JSON.stringify(data)) //получение заметок \r\n        this._data = data \r\n    }\r\n    updateActiveItem(item){ //редактирование заметок\r\n        if (this.data[this.activeItemIndex]){\r\n            this.data[this.activeItemIndex] = item\r\n        }\r\n    }\r\n    addItem(note) { //добавление заметок\r\n        const newNotes = [...[note], ...this.data] \r\n        this.activeItemIndex = 0\r\n        this.data = newNotes\r\n        console.log('addItem newNotes', newNotes)\r\n        localStorage.setItem(STORE_KEY, JSON.stringify(newNotes))\r\n    }\r\n    getActiveItem() { return this.data.find((item, index) => index === this.activeItemIndex) }\r\n    removeItem() { this.data = this.data.filter((item, index) => index !== this.activeItemIndex) }\r\n}\r\nconst store = new Store();\r\nexport default store;","import './Note.css'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nconst ItemEdit = ({ store }) => {\r\n    const activeItem = store.getActiveItem() || { title: '', text: '' } //получения массива заметок\r\n\r\n    return (\r\n        <>\r\n                {/*поле заголовок*/}\r\n            <div className='item_in'>\r\n                <input autoFocus={true}\r\n                    type='text'\r\n                    placeholder='Заголовок'\r\n                    value={activeItem.title}\r\n                    onChange={e => store.updateActiveItem({ ...activeItem, title: e.target.value })}\r\n                />\r\n            </div>\r\n            {/*поле тела заметки*/}\r\n            <div className='item_area'>\r\n                <textarea\r\n                    value={activeItem.text}\r\n                    placeholder='Текст заметки'\r\n                    onChange={e => store.updateActiveItem({ ...activeItem, text: e.target.value })}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default observer(ItemEdit)","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport '../Note.css'\r\n\r\nconst Window = ({ store }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  }; //вызов модального окна для подтверждения удаления заметки\r\n\r\n  const handleOk = (e) => {\r\n    e.stopPropagation()\r\n    store.removeItem()\r\n    setIsModalVisible(false);\r\n  }; //подтверждение удаления кнопкой \"ОК\"\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  }; //Отмена. Закрытие модального окна\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" size='small' onClick={showModal}> <DeleteOutlined /> </Button> {/*кнопка удалить заметку \"+*/}\r\n      <Modal title=\"Удаление\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>  {/*подтверждение удаления или отмена*/}\r\n        <p>Удалить?</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Window)","import React, { Component } from 'react'\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport default class NewNote extends Component {\r\n    handleClick = (e) => {\r\n        let { onClick } = this.props;\r\n        onClick && onClick(e);\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick}>\r\n                <Button type=\"primary\" size='small'><PlusOutlined /></Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ItemEdit from './../ItemEdit'\r\nimport Window from './Modal'\r\nimport NewNote from '../NewNote'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Layout, Menu } from 'antd';\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined, RightOutlined, } from '@ant-design/icons';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst Sidebar = ({ store }) => {\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const handleClick = (e) => {\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        store.addItem({ title: '', text: '' }) //добавление новой заметки по нажатию кнопки \"+\"\r\n        store.updateActiveItem({ title: '', text: '' }) //редактирование выбранной заметки\r\n        store.activeItemIndex = 0\r\n    }\r\n    return (\r\n        <Layout>\r\n            <Sider trigger={null} collapsible collapsed={collapsed}>\r\n                <div>\r\n                    <div className='newNoteButton'>\r\n                        <NewNote onClick={handleClick} /> {/*кнопка сознаюя заметки*/}\r\n                    </div>\r\n                    <div className='delButton'>\r\n                        <Window store={store} /> {/*кнопка удаления заметки*/}\r\n                    </div>\r\n                </div>\r\n                <Menu className='menu' onSelect={({ item, key }) => { store.activeItemIndex = +key }} /*меню где отображаются заметки*/\r\n                    theme=\"dark\"\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={['1']}\r\n                >\r\n                    {store.data.map((item, idx) => (<Menu.Item\r\n                        key={idx}\r\n                        item={item}\r\n                        icon={<RightOutlined />}>\r\n                        {item.title}\r\n                    </Menu.Item>))}\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                <Header className=\"site-layout-background\" style={{ padding: 0 }}> {/*сворачивание и разворачивания меню*/}\r\n                    {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                        className: 'trigger',\r\n                        onClick: () => { setCollapsed(!collapsed) },\r\n                    })}\r\n                </Header>\r\n                <Content className=\"site-layout-background\">\r\n                    <ItemEdit store={store} /> {/*отображение и радактирование заметок*/}\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default observer(Sidebar)","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\nimport store from './store'\r\nimport Sidebar from './Component/Sidebar/Sidebar';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (<div>\r\n      <Sidebar store={store} />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}